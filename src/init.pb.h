// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: init.proto

#ifndef PROTOBUF_init_2eproto__INCLUDED
#define PROTOBUF_init_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace hsa_init {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_init_2eproto();
void protobuf_AssignDesc_init_2eproto();
void protobuf_ShutdownFile_init_2eproto();

class InitResponse;

enum InitResponse_InitMessage {
  InitResponse_InitMessage_HSA_STATUS_SUCCESS = 1,
  InitResponse_InitMessage_HSA_STATUS_ERROR_OUT_OF_RESOURCES = 2,
  InitResponse_InitMessage_HSA_STATUS_ERROR_REFCOUNT_OVERFLOW = 3
};
bool InitResponse_InitMessage_IsValid(int value);
const InitResponse_InitMessage InitResponse_InitMessage_InitMessage_MIN = InitResponse_InitMessage_HSA_STATUS_SUCCESS;
const InitResponse_InitMessage InitResponse_InitMessage_InitMessage_MAX = InitResponse_InitMessage_HSA_STATUS_ERROR_REFCOUNT_OVERFLOW;
const int InitResponse_InitMessage_InitMessage_ARRAYSIZE = InitResponse_InitMessage_InitMessage_MAX + 1;

const ::google::protobuf::EnumDescriptor* InitResponse_InitMessage_descriptor();
inline const ::std::string& InitResponse_InitMessage_Name(InitResponse_InitMessage value) {
  return ::google::protobuf::internal::NameOfEnum(
    InitResponse_InitMessage_descriptor(), value);
}
inline bool InitResponse_InitMessage_Parse(
    const ::std::string& name, InitResponse_InitMessage* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InitResponse_InitMessage>(
    InitResponse_InitMessage_descriptor(), name, value);
}
// ===================================================================

class InitResponse : public ::google::protobuf::Message {
 public:
  InitResponse();
  virtual ~InitResponse();

  InitResponse(const InitResponse& from);

  inline InitResponse& operator=(const InitResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitResponse& default_instance();

  void Swap(InitResponse* other);

  // implements Message ----------------------------------------------

  InitResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InitResponse& from);
  void MergeFrom(const InitResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef InitResponse_InitMessage InitMessage;
  static const InitMessage HSA_STATUS_SUCCESS = InitResponse_InitMessage_HSA_STATUS_SUCCESS;
  static const InitMessage HSA_STATUS_ERROR_OUT_OF_RESOURCES = InitResponse_InitMessage_HSA_STATUS_ERROR_OUT_OF_RESOURCES;
  static const InitMessage HSA_STATUS_ERROR_REFCOUNT_OVERFLOW = InitResponse_InitMessage_HSA_STATUS_ERROR_REFCOUNT_OVERFLOW;
  static inline bool InitMessage_IsValid(int value) {
    return InitResponse_InitMessage_IsValid(value);
  }
  static const InitMessage InitMessage_MIN =
    InitResponse_InitMessage_InitMessage_MIN;
  static const InitMessage InitMessage_MAX =
    InitResponse_InitMessage_InitMessage_MAX;
  static const int InitMessage_ARRAYSIZE =
    InitResponse_InitMessage_InitMessage_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  InitMessage_descriptor() {
    return InitResponse_InitMessage_descriptor();
  }
  static inline const ::std::string& InitMessage_Name(InitMessage value) {
    return InitResponse_InitMessage_Name(value);
  }
  static inline bool InitMessage_Parse(const ::std::string& name,
      InitMessage* value) {
    return InitResponse_InitMessage_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .hsa_init.InitResponse.InitMessage type = 1 [default = HSA_STATUS_SUCCESS];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::hsa_init::InitResponse_InitMessage type() const;
  inline void set_type(::hsa_init::InitResponse_InitMessage value);

  // @@protoc_insertion_point(class_scope:hsa_init.InitResponse)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  friend void  protobuf_AddDesc_init_2eproto();
  friend void protobuf_AssignDesc_init_2eproto();
  friend void protobuf_ShutdownFile_init_2eproto();

  void InitAsDefaultInstance();
  static InitResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// InitResponse

// required .hsa_init.InitResponse.InitMessage type = 1 [default = HSA_STATUS_SUCCESS];
inline bool InitResponse::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitResponse::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitResponse::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::hsa_init::InitResponse_InitMessage InitResponse::type() const {
  // @@protoc_insertion_point(field_get:hsa_init.InitResponse.type)
  return static_cast< ::hsa_init::InitResponse_InitMessage >(type_);
}
inline void InitResponse::set_type(::hsa_init::InitResponse_InitMessage value) {
  assert(::hsa_init::InitResponse_InitMessage_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:hsa_init.InitResponse.type)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace hsa_init

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::hsa_init::InitResponse_InitMessage> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::hsa_init::InitResponse_InitMessage>() {
  return ::hsa_init::InitResponse_InitMessage_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_init_2eproto__INCLUDED
