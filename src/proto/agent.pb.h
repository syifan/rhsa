// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agent.proto

#ifndef PROTOBUF_agent_2eproto__INCLUDED
#define PROTOBUF_agent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace rhsa {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_agent_2eproto();
void protobuf_AssignDesc_agent_2eproto();
void protobuf_ShutdownFile_agent_2eproto();

class Agent;
class QueryAgents;

// ===================================================================

class Agent : public ::google::protobuf::Message {
 public:
  Agent();
  virtual ~Agent();

  Agent(const Agent& from);

  inline Agent& operator=(const Agent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Agent& default_instance();

  void Swap(Agent* other);

  // implements Message ----------------------------------------------

  Agent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Agent& from);
  void MergeFrom(const Agent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 100;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 100;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required string vendor_name = 101;
  inline bool has_vendor_name() const;
  inline void clear_vendor_name();
  static const int kVendorNameFieldNumber = 101;
  inline const ::std::string& vendor_name() const;
  inline void set_vendor_name(const ::std::string& value);
  inline void set_vendor_name(const char* value);
  inline void set_vendor_name(const char* value, size_t size);
  inline ::std::string* mutable_vendor_name();
  inline ::std::string* release_vendor_name();
  inline void set_allocated_vendor_name(::std::string* vendor_name);

  // required int32 grid_max_dim = 102;
  inline bool has_grid_max_dim() const;
  inline void clear_grid_max_dim();
  static const int kGridMaxDimFieldNumber = 102;
  inline ::google::protobuf::int32 grid_max_dim() const;
  inline void set_grid_max_dim(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rhsa.Agent)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_vendor_name();
  inline void clear_has_vendor_name();
  inline void set_has_grid_max_dim();
  inline void clear_has_grid_max_dim();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* vendor_name_;
  ::google::protobuf::int32 grid_max_dim_;
  friend void  protobuf_AddDesc_agent_2eproto();
  friend void protobuf_AssignDesc_agent_2eproto();
  friend void protobuf_ShutdownFile_agent_2eproto();

  void InitAsDefaultInstance();
  static Agent* default_instance_;
};
// -------------------------------------------------------------------

class QueryAgents : public ::google::protobuf::Message {
 public:
  QueryAgents();
  virtual ~QueryAgents();

  QueryAgents(const QueryAgents& from);

  inline QueryAgents& operator=(const QueryAgents& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAgents& default_instance();

  void Swap(QueryAgents* other);

  // implements Message ----------------------------------------------

  QueryAgents* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryAgents& from);
  void MergeFrom(const QueryAgents& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .rhsa.Agent agents = 1;
  inline int agents_size() const;
  inline void clear_agents();
  static const int kAgentsFieldNumber = 1;
  inline const ::rhsa::Agent& agents(int index) const;
  inline ::rhsa::Agent* mutable_agents(int index);
  inline ::rhsa::Agent* add_agents();
  inline const ::google::protobuf::RepeatedPtrField< ::rhsa::Agent >&
      agents() const;
  inline ::google::protobuf::RepeatedPtrField< ::rhsa::Agent >*
      mutable_agents();

  // @@protoc_insertion_point(class_scope:rhsa.QueryAgents)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::rhsa::Agent > agents_;
  friend void  protobuf_AddDesc_agent_2eproto();
  friend void protobuf_AssignDesc_agent_2eproto();
  friend void protobuf_ShutdownFile_agent_2eproto();

  void InitAsDefaultInstance();
  static QueryAgents* default_instance_;
};
// ===================================================================


// ===================================================================

// Agent

// required string name = 100;
inline bool Agent::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Agent::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Agent::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Agent::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Agent::name() const {
  // @@protoc_insertion_point(field_get:rhsa.Agent.name)
  return *name_;
}
inline void Agent::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:rhsa.Agent.name)
}
inline void Agent::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:rhsa.Agent.name)
}
inline void Agent::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rhsa.Agent.name)
}
inline ::std::string* Agent::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rhsa.Agent.name)
  return name_;
}
inline ::std::string* Agent::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Agent::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rhsa.Agent.name)
}

// required string vendor_name = 101;
inline bool Agent::has_vendor_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Agent::set_has_vendor_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Agent::clear_has_vendor_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Agent::clear_vendor_name() {
  if (vendor_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vendor_name_->clear();
  }
  clear_has_vendor_name();
}
inline const ::std::string& Agent::vendor_name() const {
  // @@protoc_insertion_point(field_get:rhsa.Agent.vendor_name)
  return *vendor_name_;
}
inline void Agent::set_vendor_name(const ::std::string& value) {
  set_has_vendor_name();
  if (vendor_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vendor_name_ = new ::std::string;
  }
  vendor_name_->assign(value);
  // @@protoc_insertion_point(field_set:rhsa.Agent.vendor_name)
}
inline void Agent::set_vendor_name(const char* value) {
  set_has_vendor_name();
  if (vendor_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vendor_name_ = new ::std::string;
  }
  vendor_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:rhsa.Agent.vendor_name)
}
inline void Agent::set_vendor_name(const char* value, size_t size) {
  set_has_vendor_name();
  if (vendor_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vendor_name_ = new ::std::string;
  }
  vendor_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rhsa.Agent.vendor_name)
}
inline ::std::string* Agent::mutable_vendor_name() {
  set_has_vendor_name();
  if (vendor_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vendor_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rhsa.Agent.vendor_name)
  return vendor_name_;
}
inline ::std::string* Agent::release_vendor_name() {
  clear_has_vendor_name();
  if (vendor_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = vendor_name_;
    vendor_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Agent::set_allocated_vendor_name(::std::string* vendor_name) {
  if (vendor_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete vendor_name_;
  }
  if (vendor_name) {
    set_has_vendor_name();
    vendor_name_ = vendor_name;
  } else {
    clear_has_vendor_name();
    vendor_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rhsa.Agent.vendor_name)
}

// required int32 grid_max_dim = 102;
inline bool Agent::has_grid_max_dim() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Agent::set_has_grid_max_dim() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Agent::clear_has_grid_max_dim() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Agent::clear_grid_max_dim() {
  grid_max_dim_ = 0;
  clear_has_grid_max_dim();
}
inline ::google::protobuf::int32 Agent::grid_max_dim() const {
  // @@protoc_insertion_point(field_get:rhsa.Agent.grid_max_dim)
  return grid_max_dim_;
}
inline void Agent::set_grid_max_dim(::google::protobuf::int32 value) {
  set_has_grid_max_dim();
  grid_max_dim_ = value;
  // @@protoc_insertion_point(field_set:rhsa.Agent.grid_max_dim)
}

// -------------------------------------------------------------------

// QueryAgents

// repeated .rhsa.Agent agents = 1;
inline int QueryAgents::agents_size() const {
  return agents_.size();
}
inline void QueryAgents::clear_agents() {
  agents_.Clear();
}
inline const ::rhsa::Agent& QueryAgents::agents(int index) const {
  // @@protoc_insertion_point(field_get:rhsa.QueryAgents.agents)
  return agents_.Get(index);
}
inline ::rhsa::Agent* QueryAgents::mutable_agents(int index) {
  // @@protoc_insertion_point(field_mutable:rhsa.QueryAgents.agents)
  return agents_.Mutable(index);
}
inline ::rhsa::Agent* QueryAgents::add_agents() {
  // @@protoc_insertion_point(field_add:rhsa.QueryAgents.agents)
  return agents_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::rhsa::Agent >&
QueryAgents::agents() const {
  // @@protoc_insertion_point(field_list:rhsa.QueryAgents.agents)
  return agents_;
}
inline ::google::protobuf::RepeatedPtrField< ::rhsa::Agent >*
QueryAgents::mutable_agents() {
  // @@protoc_insertion_point(field_mutable_list:rhsa.QueryAgents.agents)
  return &agents_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace rhsa

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_agent_2eproto__INCLUDED
