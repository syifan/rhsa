// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: program.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "program.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace rhsa {

namespace {

const ::google::protobuf::Descriptor* CreateExecutable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateExecutable_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CreateExecutable_Profile_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CreateExecutable_ExecutableState_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ProgramMesg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProgramMesg_reflection_ = NULL;
struct ProgramMesgOneofInstance {
  const ::rhsa::CreateExecutable* createexecutable_;
}* ProgramMesg_default_oneof_instance_ = NULL;

}  // namespace


void protobuf_AssignDesc_program_2eproto() {
  protobuf_AddDesc_program_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "program.proto");
  GOOGLE_CHECK(file != NULL);
  CreateExecutable_descriptor_ = file->message_type(0);
  static const int CreateExecutable_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateExecutable, profile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateExecutable, executablestate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateExecutable, options_),
  };
  CreateExecutable_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateExecutable_descriptor_,
      CreateExecutable::default_instance_,
      CreateExecutable_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateExecutable, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateExecutable, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateExecutable));
  CreateExecutable_Profile_descriptor_ = CreateExecutable_descriptor_->enum_type(0);
  CreateExecutable_ExecutableState_descriptor_ = CreateExecutable_descriptor_->enum_type(1);
  ProgramMesg_descriptor_ = file->message_type(1);
  static const int ProgramMesg_offsets_[2] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ProgramMesg_default_oneof_instance_, createexecutable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProgramMesg, Payload_),
  };
  ProgramMesg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProgramMesg_descriptor_,
      ProgramMesg::default_instance_,
      ProgramMesg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProgramMesg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProgramMesg, _unknown_fields_),
      -1,
      ProgramMesg_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProgramMesg, _oneof_case_[0]),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProgramMesg));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_program_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateExecutable_descriptor_, &CreateExecutable::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProgramMesg_descriptor_, &ProgramMesg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_program_2eproto() {
  delete CreateExecutable::default_instance_;
  delete CreateExecutable_reflection_;
  delete ProgramMesg::default_instance_;
  delete ProgramMesg_default_oneof_instance_;
  delete ProgramMesg_reflection_;
}

void protobuf_AddDesc_program_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rprogram.proto\022\004rhsa\"\243\002\n\020CreateExecutab"
    "le\022/\n\007profile\030d \002(\0162\036.rhsa.CreateExecuta"
    "ble.Profile\022\?\n\017executableState\030e \002(\0162&.r"
    "hsa.CreateExecutable.ExecutableState\022\017\n\007"
    "options\030f \002(\t\"5\n\007Profile\022\024\n\020HSA_PROFILE_"
    "BASE\020\000\022\024\n\020HSA_PROFILE_FULL\020\001\"U\n\017Executab"
    "leState\022!\n\035HSA_EXECUTABLE_STATE_UNFROZEN"
    "\020\000\022\037\n\033HSA_EXECUTABLE_STATE_FROZEN\020\001\"M\n\013P"
    "rogramMesg\0223\n\020createExecutable\030\350\007 \001(\0132\026."
    "rhsa.CreateExecutableH\000B\t\n\007Payload", 394);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "program.proto", &protobuf_RegisterTypes);
  CreateExecutable::default_instance_ = new CreateExecutable();
  ProgramMesg::default_instance_ = new ProgramMesg();
  ProgramMesg_default_oneof_instance_ = new ProgramMesgOneofInstance;
  CreateExecutable::default_instance_->InitAsDefaultInstance();
  ProgramMesg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_program_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_program_2eproto {
  StaticDescriptorInitializer_program_2eproto() {
    protobuf_AddDesc_program_2eproto();
  }
} static_descriptor_initializer_program_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* CreateExecutable_Profile_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateExecutable_Profile_descriptor_;
}
bool CreateExecutable_Profile_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CreateExecutable_Profile CreateExecutable::HSA_PROFILE_BASE;
const CreateExecutable_Profile CreateExecutable::HSA_PROFILE_FULL;
const CreateExecutable_Profile CreateExecutable::Profile_MIN;
const CreateExecutable_Profile CreateExecutable::Profile_MAX;
const int CreateExecutable::Profile_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* CreateExecutable_ExecutableState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateExecutable_ExecutableState_descriptor_;
}
bool CreateExecutable_ExecutableState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CreateExecutable_ExecutableState CreateExecutable::HSA_EXECUTABLE_STATE_UNFROZEN;
const CreateExecutable_ExecutableState CreateExecutable::HSA_EXECUTABLE_STATE_FROZEN;
const CreateExecutable_ExecutableState CreateExecutable::ExecutableState_MIN;
const CreateExecutable_ExecutableState CreateExecutable::ExecutableState_MAX;
const int CreateExecutable::ExecutableState_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CreateExecutable::kProfileFieldNumber;
const int CreateExecutable::kExecutableStateFieldNumber;
const int CreateExecutable::kOptionsFieldNumber;
#endif  // !_MSC_VER

CreateExecutable::CreateExecutable()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rhsa.CreateExecutable)
}

void CreateExecutable::InitAsDefaultInstance() {
}

CreateExecutable::CreateExecutable(const CreateExecutable& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rhsa.CreateExecutable)
}

void CreateExecutable::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  profile_ = 0;
  executablestate_ = 0;
  options_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateExecutable::~CreateExecutable() {
  // @@protoc_insertion_point(destructor:rhsa.CreateExecutable)
  SharedDtor();
}

void CreateExecutable::SharedDtor() {
  if (options_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete options_;
  }
  if (this != default_instance_) {
  }
}

void CreateExecutable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateExecutable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateExecutable_descriptor_;
}

const CreateExecutable& CreateExecutable::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_program_2eproto();
  return *default_instance_;
}

CreateExecutable* CreateExecutable::default_instance_ = NULL;

CreateExecutable* CreateExecutable::New() const {
  return new CreateExecutable;
}

void CreateExecutable::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CreateExecutable*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(profile_, executablestate_);
    if (has_options()) {
      if (options_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        options_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateExecutable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rhsa.CreateExecutable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .rhsa.CreateExecutable.Profile profile = 100;
      case 100: {
        if (tag == 800) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::rhsa::CreateExecutable_Profile_IsValid(value)) {
            set_profile(static_cast< ::rhsa::CreateExecutable_Profile >(value));
          } else {
            mutable_unknown_fields()->AddVarint(100, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(808)) goto parse_executableState;
        break;
      }

      // required .rhsa.CreateExecutable.ExecutableState executableState = 101;
      case 101: {
        if (tag == 808) {
         parse_executableState:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::rhsa::CreateExecutable_ExecutableState_IsValid(value)) {
            set_executablestate(static_cast< ::rhsa::CreateExecutable_ExecutableState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(101, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(818)) goto parse_options;
        break;
      }

      // required string options = 102;
      case 102: {
        if (tag == 818) {
         parse_options:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_options()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->options().data(), this->options().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "options");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rhsa.CreateExecutable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rhsa.CreateExecutable)
  return false;
#undef DO_
}

void CreateExecutable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rhsa.CreateExecutable)
  // required .rhsa.CreateExecutable.Profile profile = 100;
  if (has_profile()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      100, this->profile(), output);
  }

  // required .rhsa.CreateExecutable.ExecutableState executableState = 101;
  if (has_executablestate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      101, this->executablestate(), output);
  }

  // required string options = 102;
  if (has_options()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->options().data(), this->options().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "options");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      102, this->options(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:rhsa.CreateExecutable)
}

::google::protobuf::uint8* CreateExecutable::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rhsa.CreateExecutable)
  // required .rhsa.CreateExecutable.Profile profile = 100;
  if (has_profile()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      100, this->profile(), target);
  }

  // required .rhsa.CreateExecutable.ExecutableState executableState = 101;
  if (has_executablestate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      101, this->executablestate(), target);
  }

  // required string options = 102;
  if (has_options()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->options().data(), this->options().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "options");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        102, this->options(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rhsa.CreateExecutable)
  return target;
}

int CreateExecutable::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .rhsa.CreateExecutable.Profile profile = 100;
    if (has_profile()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->profile());
    }

    // required .rhsa.CreateExecutable.ExecutableState executableState = 101;
    if (has_executablestate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->executablestate());
    }

    // required string options = 102;
    if (has_options()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->options());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateExecutable::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateExecutable* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateExecutable*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateExecutable::MergeFrom(const CreateExecutable& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_profile()) {
      set_profile(from.profile());
    }
    if (from.has_executablestate()) {
      set_executablestate(from.executablestate());
    }
    if (from.has_options()) {
      set_options(from.options());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateExecutable::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateExecutable::CopyFrom(const CreateExecutable& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateExecutable::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void CreateExecutable::Swap(CreateExecutable* other) {
  if (other != this) {
    std::swap(profile_, other->profile_);
    std::swap(executablestate_, other->executablestate_);
    std::swap(options_, other->options_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreateExecutable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateExecutable_descriptor_;
  metadata.reflection = CreateExecutable_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProgramMesg::kCreateExecutableFieldNumber;
#endif  // !_MSC_VER

ProgramMesg::ProgramMesg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rhsa.ProgramMesg)
}

void ProgramMesg::InitAsDefaultInstance() {
  ProgramMesg_default_oneof_instance_->createexecutable_ = const_cast< ::rhsa::CreateExecutable*>(&::rhsa::CreateExecutable::default_instance());
}

ProgramMesg::ProgramMesg(const ProgramMesg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rhsa.ProgramMesg)
}

void ProgramMesg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_Payload();
}

ProgramMesg::~ProgramMesg() {
  // @@protoc_insertion_point(destructor:rhsa.ProgramMesg)
  SharedDtor();
}

void ProgramMesg::SharedDtor() {
  if (has_Payload()) {
    clear_Payload();
  }
  if (this != default_instance_) {
  }
}

void ProgramMesg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProgramMesg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProgramMesg_descriptor_;
}

const ProgramMesg& ProgramMesg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_program_2eproto();
  return *default_instance_;
}

ProgramMesg* ProgramMesg::default_instance_ = NULL;

ProgramMesg* ProgramMesg::New() const {
  return new ProgramMesg;
}

void ProgramMesg::clear_Payload() {
  switch(Payload_case()) {
    case kCreateExecutable: {
      delete Payload_.createexecutable_;
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void ProgramMesg::Clear() {
  clear_Payload();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProgramMesg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rhsa.ProgramMesg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .rhsa.CreateExecutable createExecutable = 1000;
      case 1000: {
        if (tag == 8002) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_createexecutable()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rhsa.ProgramMesg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rhsa.ProgramMesg)
  return false;
#undef DO_
}

void ProgramMesg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rhsa.ProgramMesg)
  // optional .rhsa.CreateExecutable createExecutable = 1000;
  if (has_createexecutable()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1000, this->createexecutable(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:rhsa.ProgramMesg)
}

::google::protobuf::uint8* ProgramMesg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rhsa.ProgramMesg)
  // optional .rhsa.CreateExecutable createExecutable = 1000;
  if (has_createexecutable()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1000, this->createexecutable(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rhsa.ProgramMesg)
  return target;
}

int ProgramMesg::ByteSize() const {
  int total_size = 0;

  switch (Payload_case()) {
    // optional .rhsa.CreateExecutable createExecutable = 1000;
    case kCreateExecutable: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->createexecutable());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProgramMesg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProgramMesg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProgramMesg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProgramMesg::MergeFrom(const ProgramMesg& from) {
  GOOGLE_CHECK_NE(&from, this);
  switch (from.Payload_case()) {
    case kCreateExecutable: {
      mutable_createexecutable()->::rhsa::CreateExecutable::MergeFrom(from.createexecutable());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProgramMesg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProgramMesg::CopyFrom(const ProgramMesg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgramMesg::IsInitialized() const {

  if (has_createexecutable()) {
    if (!this->createexecutable().IsInitialized()) return false;
  }
  return true;
}

void ProgramMesg::Swap(ProgramMesg* other) {
  if (other != this) {
    std::swap(Payload_, other->Payload_);
    std::swap(_oneof_case_[0], other->_oneof_case_[0]);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProgramMesg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProgramMesg_descriptor_;
  metadata.reflection = ProgramMesg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace rhsa

// @@protoc_insertion_point(global_scope)
