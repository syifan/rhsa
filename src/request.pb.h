// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: request.proto

#ifndef PROTOBUF_request_2eproto__INCLUDED
#define PROTOBUF_request_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "init.pb.h"
// @@protoc_insertion_point(includes)

namespace rhsa {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_request_2eproto();
void protobuf_AssignDesc_request_2eproto();
void protobuf_ShutdownFile_request_2eproto();

class Request;

// ===================================================================

class Request : public ::google::protobuf::Message {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  enum PayloadCase {
    kInitResponse = 1,
    PAYLOAD_NOT_SET = 0,
  };

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .InitResponse initResponse = 1;
  inline bool has_initresponse() const;
  inline void clear_initresponse();
  static const int kInitResponseFieldNumber = 1;
  inline const ::InitResponse& initresponse() const;
  inline ::InitResponse* mutable_initresponse();
  inline ::InitResponse* release_initresponse();
  inline void set_allocated_initresponse(::InitResponse* initresponse);

  inline PayloadCase Payload_case() const;
  // @@protoc_insertion_point(class_scope:rhsa.Request)
 private:
  inline void set_has_initresponse();

  inline bool has_Payload();
  void clear_Payload();
  inline void clear_has_Payload();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  union PayloadUnion {
    ::InitResponse* initresponse_;
  } Payload_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();

  void InitAsDefaultInstance();
  static Request* default_instance_;
};
// ===================================================================


// ===================================================================

// Request

// optional .InitResponse initResponse = 1;
inline bool Request::has_initresponse() const {
  return Payload_case() == kInitResponse;
}
inline void Request::set_has_initresponse() {
  _oneof_case_[0] = kInitResponse;
}
inline void Request::clear_initresponse() {
  if (has_initresponse()) {
    delete Payload_.initresponse_;
    clear_has_Payload();
  }
}
inline const ::InitResponse& Request::initresponse() const {
  return has_initresponse() ? *Payload_.initresponse_
                      : ::InitResponse::default_instance();
}
inline ::InitResponse* Request::mutable_initresponse() {
  if (!has_initresponse()) {
    clear_Payload();
    set_has_initresponse();
    Payload_.initresponse_ = new ::InitResponse;
  }
  return Payload_.initresponse_;
}
inline ::InitResponse* Request::release_initresponse() {
  if (has_initresponse()) {
    clear_has_Payload();
    ::InitResponse* temp = Payload_.initresponse_;
    Payload_.initresponse_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Request::set_allocated_initresponse(::InitResponse* initresponse) {
  clear_Payload();
  if (initresponse) {
    set_has_initresponse();
    Payload_.initresponse_ = initresponse;
  }
}

inline bool Request::has_Payload() {
  return Payload_case() != PAYLOAD_NOT_SET;
}
inline void Request::clear_has_Payload() {
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}
inline Request::PayloadCase Request::Payload_case() const {
  return Request::PayloadCase(_oneof_case_[0]);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace rhsa

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_request_2eproto__INCLUDED
